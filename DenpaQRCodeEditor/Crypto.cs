using System;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace DenpaQRCodeEditor
{
    class Crypto
    {
        private static Byte[][] Encryption_Table = new Byte[256][];
        private static Byte[][] Decryption_Table = new Byte[256][];
        private static Byte[][] alpha_numeric = new Byte[256][];
        private static Byte[][] Initialize_Encryption = new Byte[128][] {
            new Byte[1 +  1] { 0x00, 0x01 },
            new Byte[1 +  2] { 0x03, 0xFD, 0x05 },
            new Byte[1 +  1] { 0x04, 0x01 },
            new Byte[1 +  4] { 0x0F, 0xF9, 0x01, 0x01, 0x09 },
            new Byte[1 +  1] { 0x10, 0x01 },
            new Byte[1 +  8] { 0x1B, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05 },
            new Byte[1 +  8] { 0x2C, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11 },
            new Byte[1 +  8] { 0x3F, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11 },
            new Byte[1 +  1] { 0x40, 0x01 },
            new Byte[1 + 16] { 0x53, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x15, 0xED, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05 },
            new Byte[1 + 16] { 0x64, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11 },
            new Byte[1 + 16] { 0x8F, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x19, 0xE9, 0x01, 0x01, 0x29 },
            new Byte[1 +  1] { 0x90, 0x01 },
            new Byte[1 + 16] { 0xBB, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x1D, 0xE5, 0x05, 0xFD, 0xFD, 0x05, 0x25 },
            new Byte[1 + 16] { 0xDC, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21 },
            new Byte[1 + 16] { 0xFF, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21 },
            null,
            new Byte[1 + 32] { 0x23, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x25, 0xDD, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xE5, 0x1D, 0x05 },
            new Byte[1 + 32] { 0x44, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21, 0x01, 0x01, 0x01, 0xE1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x21 },
            new Byte[1 + 32] { 0x6F, 0xF9, 0x01, 0x01, 0x29, 0xD9, 0x01, 0x01, 0x29, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xE9, 
                                     0xF9, 0x01, 0x01, 0xE9, 0x19, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x29 },
            new Byte[1 + 32] { 0xB0, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 32] { 0xDB, 0xFD, 0xED, 0x15, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 
                                     0xFD, 0x2D, 0xD5, 0x05, 0xFD, 0xFD, 0x05, 0x25, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x25 },
            new Byte[1 + 32] { 0xEC, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x31, 0x01, 0x01, 0x01, 0xD1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0x11 },
            new Byte[1 + 32] { 0x3F, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xF1, 0x11, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xD1, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x31, 0xD1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x51 },
            null,
            new Byte[1 + 32] { 0x93, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0xC5, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x35, 0xCD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x45 },
            new Byte[1 + 32] { 0xA4, 0x01, 0x01, 0x01, 0x31, 0x01, 0x01, 0x01, 0xD1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11 },
            new Byte[1 + 32] { 0xEF, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0xC9, 0xF9, 0x01, 0x01, 0x39, 0xC9, 0x01, 0x01, 0x49 },
            new Byte[1 + 32] { 0x30, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 32] { 0x7B, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xC5, 0xFD, 0x3D, 0xC5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x45 },
            new Byte[1 + 32] { 0xBC, 0x01, 0x01, 0x01, 0xC1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 32] { 0xFF, 0xC1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            null,
            new Byte[1 + 64] { 0x43, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x45, 0xBD, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xC5, 0x3D, 0x05 },
            new Byte[1 + 64] { 0x84, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 64] { 0xCF, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0x49, 0xB9, 0x01, 0x01, 0x49, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xC9, 
                                     0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0xC9, 0x39, 0x01, 0x01, 0xC9, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x49 },
            new Byte[1 + 64] { 0x10, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 64] { 0x5B, 0xFD, 0x4D, 0xB5, 0x05, 0xFD, 0xFD, 0x05, 0x45, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0xC5, 
                                     0xFD, 0xCD, 0x35, 0x05, 0xFD, 0xFD, 0x05, 0xC5, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x45 },
            new Byte[1 + 64] { 0xEC, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xD1, 0x01, 0x01, 0x01, 0x31, 0x01, 0x01, 0x01, 0x91, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x51, 0x01, 0x01, 0x01, 0xB1, 0x01, 0x01, 0x01, 0x91 },
            new Byte[1 + 64] { 0x3F, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xD1, 0x31, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xD1, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xD1, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x51, 0xB1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x51, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x51 },
            null,
            new Byte[1 + 64] { 0x93, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x55, 0xAD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x45, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x15, 0xED, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0xC5, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xD5, 0x2D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0xC5, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x15, 0xED, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x45 },
            new Byte[1 + 64] { 0x24, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xD1, 0x01, 0x01, 0x01, 0x31, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x91, 
                                     0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0x51, 0x01, 0x01, 0x01, 0xB1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x91 },
            new Byte[1 + 64] { 0x4F, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x29, 0xF9, 0x01, 0x01, 0xD9, 0x29, 0x01, 0x01, 0xE9, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x19, 0xE9, 0x01, 0x01, 0x29, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0xA9, 0xF9, 0x01, 0x01, 0x59, 0xA9, 0x01, 0x01, 0x69, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x19, 0xE9, 0x01, 0x01, 0x29 },
            new Byte[1 + 64] { 0x90, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 64] { 0x3B, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x1D, 0xE5, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x25, 0xFD, 0xDD, 0x25, 0x05, 0xFD, 0xFD, 0x05, 0xA5, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x1D, 0xE5, 0x05, 0xFD, 0xFD, 0x05, 0x65, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xA5, 0xFD, 0x5D, 0xA5, 0x05, 0xFD, 0xFD, 0x05, 0xA5 },
            new Byte[1 + 64] { 0x5C, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x61, 
                                     0x01, 0x01, 0x01, 0xA1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21, 
                                     0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 
                                     0x01, 0x01, 0x01, 0x21, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21 },
            new Byte[1 + 64] { 0xFF, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 
                                     0x21, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xA1, 
                                     0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x61, 
                                     0xA1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xA1 },
            null,
            new Byte[1 + 64] { 0xA3, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xE5, 0x1D, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xE5, 0x1D, 0x85, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x65, 0x9D, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xE5, 0x1D, 0x85 },
            new Byte[1 + 64] { 0xC4, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x61, 0x01, 0x01, 0x01, 0xA1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x21, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x21, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x21 },
            new Byte[1 + 64] { 0x6F, 0xF9, 0x01, 0x01, 0xE9, 0x19, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x29, 
                                     0xF9, 0x01, 0x01, 0xE9, 0x19, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xA9, 
                                     0xF9, 0x01, 0x01, 0x69, 0x99, 0x01, 0x01, 0x69, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xA9, 
                                     0xF9, 0x01, 0x01, 0xE9, 0x19, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xA9 },
            new Byte[1 + 64] { 0xF0, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81 },
            new Byte[1 + 64] { 0x1B, 0xFD, 0xED, 0x15, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x25, 
                                     0xFD, 0xED, 0x15, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x25, 
                                     0xFD, 0xED, 0x15, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0xA5, 
                                     0xFD, 0x6D, 0x95, 0x05, 0xFD, 0xFD, 0x05, 0x65, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x25 },
            new Byte[1 + 64] { 0xAC, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0x91, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x71, 0x01, 0x01, 0x01, 0x91, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0x91 },
            new Byte[1 + 64] { 0x3F, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xF1, 0x11, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x91, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x71, 0x91, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xF1, 0x11, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xF1, 0x11, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x91 },
            null,
            new Byte[1 + 64] { 0xD3, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x85, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x75, 0x8D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x85 },
            new Byte[1 + 64] { 0x64, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x91, 
                                     0x01, 0x01, 0x01, 0x71, 0x01, 0x01, 0x01, 0x91, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x91 },
            new Byte[1 + 64] { 0xEF, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x89, 0xF9, 0x01, 0x01, 0x79, 0x89, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x89 },
            new Byte[1 + 64] { 0x70, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81 },
            new Byte[1 + 64] { 0xFB, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x85, 0xFD, 0x7D, 0x85, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x85 },
            new Byte[1 + 64] { 0x7C, 0x01, 0x01, 0x01, 0x81, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81 },
            new Byte[1 + 64] { 0xFF, 0x81, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81 },
            null,
            new Byte[1 + 64] { 0x83, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x85, 0x7D, 0x05 },
            new Byte[1 + 64] { 0x04, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81, 0x01, 0x01, 0x01, 0x81 },
            new Byte[1 + 64] { 0x8F, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0x89, 0x79, 0x01, 0x01, 0x89, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x89 },
            new Byte[1 + 64] { 0x10, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81 },
            new Byte[1 + 64] { 0x9B, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0x8D, 0x75, 0x05, 0xFD, 0xFD, 0x05, 0x85, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x85 },
            new Byte[1 + 64] { 0x2C, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x91, 0x01, 0x01, 0x01, 0x71, 0x01, 0x01, 0x01, 0x91, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x91 },
            new Byte[1 + 64] { 0xBF, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x91, 0x71, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x91, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x91 },
            new Byte[1 +  1] { 0xC0, 0x01 },
            new Byte[1 + 64] { 0x53, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x15, 0xED, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x15, 0xED, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x95, 0x6D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x85, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x15, 0xED, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x85 },
            new Byte[1 + 64] { 0xE4, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0x91, 0x01, 0x01, 0x01, 0x71, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x91, 
                                     0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x91 },
            new Byte[1 + 64] { 0x0F, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x69, 0xF9, 0x01, 0x01, 0x99, 0x69, 0x01, 0x01, 0xA9, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x19, 0xE9, 0x01, 0x01, 0x29, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x19, 0xE9, 0x01, 0x01, 0x29, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x19, 0xE9, 0x01, 0x01, 0x29 },
            new Byte[1 + 64] { 0x90, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81 },
            new Byte[1 + 64] { 0x3B, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x1D, 0xE5, 0x05, 0xFD, 0xFD, 0x05, 0xA5, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x65, 0xFD, 0x9D, 0x65, 0x05, 0xFD, 0xFD, 0x05, 0xA5, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x1D, 0xE5, 0x05, 0xFD, 0xFD, 0x05, 0x25, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x1D, 0xE5, 0x05, 0xFD, 0xFD, 0x05, 0xA5 },
            new Byte[1 + 64] { 0x5C, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21, 
                                     0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21, 
                                     0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xA1, 
                                     0x01, 0x01, 0x01, 0x61, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21 },
            new Byte[1 + 64] { 0xFF, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xA1, 
                                     0x61, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xA1, 
                                     0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21, 
                                     0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xA1 },
            null,
            new Byte[1 + 64] { 0xA3, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xA5, 0x5D, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xE5, 0x1D, 0x85, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x25, 0xDD, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xE5, 0x1D, 0x85 },
            new Byte[1 + 64] { 0xC4, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21, 0x01, 0x01, 0x01, 0xE1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x21, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xA1, 0x01, 0x01, 0x01, 0x61, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x21 },
            new Byte[1 + 64] { 0x6F, 0xF9, 0x01, 0x01, 0xA9, 0x59, 0x01, 0x01, 0xA9, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x69, 
                                     0xF9, 0x01, 0x01, 0xE9, 0x19, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xA9, 
                                     0xF9, 0x01, 0x01, 0x29, 0xD9, 0x01, 0x01, 0x29, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xE9, 
                                     0xF9, 0x01, 0x01, 0xE9, 0x19, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xA9 },
            new Byte[1 + 64] { 0xB0, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 64] { 0xDB, 0xFD, 0xED, 0x15, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x65, 
                                     0xFD, 0xAD, 0x55, 0x05, 0xFD, 0xFD, 0x05, 0xA5, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x25, 
                                     0xFD, 0xED, 0x15, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 
                                     0xFD, 0x2D, 0xD5, 0x05, 0xFD, 0xFD, 0x05, 0x25, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x25 },
            new Byte[1 + 64] { 0x6C, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xB1, 0x01, 0x01, 0x01, 0x51, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0x91, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x31, 0x01, 0x01, 0x01, 0xD1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0x91 },
            new Byte[1 + 64] { 0xBF, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xF1, 0x11, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xD1, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x31, 0xD1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xD1, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xF1, 0x11, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x51, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xB1, 0x51, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x51 },
            null,
            new Byte[1 + 64] { 0x13, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x45, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xB5, 0x4D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0xC5, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0xC5, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x35, 0xCD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x45 },
            new Byte[1 + 64] { 0xA4, 0x01, 0x01, 0x01, 0xB1, 0x01, 0x01, 0x01, 0x51, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x91, 
                                     0x01, 0x01, 0x01, 0x31, 0x01, 0x01, 0x01, 0xD1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x91 },
            new Byte[1 + 64] { 0xEF, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0xC9, 0xF9, 0x01, 0x01, 0x39, 0xC9, 0x01, 0x01, 0xC9, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x49, 0xF9, 0x01, 0x01, 0xB9, 0x49, 0x01, 0x01, 0x49 },
            new Byte[1 + 64] { 0x30, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 64] { 0x7B, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xC5, 0xFD, 0x3D, 0xC5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xC5, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x45, 0xFD, 0xBD, 0x45, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x45 },
            new Byte[1 + 64] { 0xBC, 0x01, 0x01, 0x01, 0xC1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x41, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 64] { 0xFF, 0xC1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x41, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            null,
            new Byte[1 + 32] { 0x43, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xC5, 0x3D, 0x05 },
            new Byte[1 + 32] { 0x84, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 32] { 0xCF, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x09, 
                                     0xF9, 0x01, 0x01, 0xC9, 0x39, 0x01, 0x01, 0xC9, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x49 },
            new Byte[1 + 32] { 0x10, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 32] { 0x5B, 0xFD, 0xCD, 0x35, 0x05, 0xFD, 0xFD, 0x05, 0xC5, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 
                                     0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x45 },
            new Byte[1 + 32] { 0x6C, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xD1, 0x01, 0x01, 0x01, 0x31, 0x01, 0x01, 0x01, 0x11 },
            new Byte[1 + 32] { 0xBF, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xD1, 0x31, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xD1, 
                                     0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x51 },
            null,
            new Byte[1 + 32] { 0x13, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xD5, 0x2D, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0xC5, 
                                     0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x15, 0xED, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x45 },
            new Byte[1 + 32] { 0x24, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 
                                     0x01, 0x01, 0x01, 0xD1, 0x01, 0x01, 0x01, 0x31, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11 },
            new Byte[1 + 32] { 0x4F, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x29, 0xF9, 0x01, 0x01, 0xD9, 0x29, 0x01, 0x01, 0xE9, 
                                     0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x19, 0xE9, 0x01, 0x01, 0x29 },
            new Byte[1 + 32] { 0x90, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xC1, 
                                     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x41 },
            new Byte[1 + 32] { 0xBB, 0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x1D, 0xE5, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 
                                     0xFD, 0xFD, 0x05, 0x05, 0xFD, 0xFD, 0x05, 0x25, 0xFD, 0xDD, 0x25, 0x05, 0xFD, 0xFD, 0x05, 0x25 },
            new Byte[1 + 32] { 0xDC, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 
                                     0x01, 0x01, 0x01, 0x21, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21 },
            new Byte[1 + 32] { 0xFF, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 
                                     0x21, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21 },
            null,
            new Byte[1 + 16] { 0x23, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xE5, 0x1D, 0x05 },
            new Byte[1 + 16] { 0x44, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE1, 0x01, 0x01, 0x01, 0x21 },
            new Byte[1 + 16] { 0x6F, 0xF9, 0x01, 0x01, 0xE9, 0x19, 0x01, 0x01, 0xE9, 0xF9, 0x01, 0x01, 0x09, 0xF9, 0x01, 0x01, 0x29 },
            new Byte[1 +  1] { 0x70, 0x01 },
            new Byte[1 + 16] { 0x9B, 0xFD, 0xED, 0x15, 0x05, 0xFD, 0xFD, 0x05, 0xE5, 0xFD, 0x0D, 0xF5, 0x05, 0xFD, 0xFD, 0x05, 0x25 },
            new Byte[1 + 16] { 0xAC, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11, 0x01, 0x01, 0x01, 0x11 },
            new Byte[1 + 16] { 0xBF, 0xF1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xF1, 0x11, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x11 },
            null,
            new Byte[1 +  8] { 0xD3, 0xFD, 0x05, 0xFD, 0x05, 0xFD, 0xF5, 0x0D, 0x05 },
            new Byte[1 +  8] { 0xE4, 0x01, 0x01, 0x01, 0xF1, 0x01, 0x01, 0x01, 0x11 },
            new Byte[1 +  8] { 0xEF, 0xF9, 0x01, 0x01, 0xF9, 0x09, 0x01, 0x01, 0x09 },
            new Byte[1 +  1] { 0xF0, 0x01 },
            new Byte[1 +  4] { 0xFB, 0xFD, 0xFD, 0x05, 0x05 },
            new Byte[1 +  1] { 0xFC, 0x01 },
            new Byte[1 +  1] { 0xFF, 0x01 },
        };

        private static Byte[] allowed_bytes = new Byte[] {
                    /*0x20, 0x24, 0x25, 0x2A, 0x2B, 0x2D, 0x2E, 0x2F,*/
                    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
                    0x38, 0x39, //0x3A, 
                   0x41, 0x42, 0x43, 0x44, 0x45,
                    0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D,
                    0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55,
                    0x56, 0x57, 0x58, 0x59, 0x5A
                };

        private static void InitCrypto()
        {
            
            //Initialize the Decryption table;
            for (int i = 0; i < 128; i++)
            {
                if (((i % 16) == 0) && (i != 0))
                {
                    Encryption_Table[i] = Encryption_Table[0];
                    Decryption_Table[i] = Decryption_Table[0];
                }
                else if (((i % 8) == 0) && (i != 0) && (i != 8) && (i < 0x40))
                {
                    Encryption_Table[i] = Encryption_Table[8];
                    Decryption_Table[i] = Decryption_Table[8];
                }
                else if (((i % 8) == 0) && (i != 0) && (i != 0x48) && (i > 0x40))
                {
                    Encryption_Table[i] = Encryption_Table[0x48];
                    Decryption_Table[i] = Decryption_Table[0x48];
                }
                else
                {
                    Encryption_Table[i] = new Byte[256];
                    Decryption_Table[i] = new Byte[256];
                    Encryption_Table[i][0] = Initialize_Encryption[i][0];
                    for (int j = 0; j < 256; j++)
                        Encryption_Table[i][(j + 1) % 256] = (Byte)(Encryption_Table[i][j] + 
                            Initialize_Encryption[i][1 + (j % (Initialize_Encryption[i].Length - 1))]);
                }
                Decryption_Table[0x80 + i] = Decryption_Table[i];
                Encryption_Table[0x80 + i] = Encryption_Table[i];
            }
            //And for knowen Ecryption table values, populate the decryption table.
            for (int i = 0; i < 256; i++)
                for (int j = 0; j < 128; j++)
                    Decryption_Table[j][Encryption_Table[j][i]] = (Byte)i;

            for (int i = 0; i < 256; i++)
            {
                Byte[] current = new Byte[allowed_bytes.Length];
                int l = 0;
                for (int j = 0; j < allowed_bytes.Length; j++)
                {
                    int k = Encryption_Table[allowed_bytes[j]][i];
                    bool found_char = false;
                    for (int m = 0; (m < allowed_bytes.Length) && !found_char; m++)
                    {
                        if (k == allowed_bytes[m])
                            found_char = true;
                    }
                    if (!found_char)
                        continue;
                    current[l] = (Byte)j;
                    l++;
                }
                if (l == 0)
                    MessageBox.Show("Error: Could not find at least one pair for Alpha-numeric encryption for " + i.ToString());
                alpha_numeric[i] = new Byte[l];
                Array.Copy(current, alpha_numeric[i], l);
            }
        }

        public static String print_algo()
        {
            String ret_val = "Byte[][] Initialize_Encryption = new Byte[256][] {\n";
            for (int i = 0; i < 128; i++)
            {
                String Temp = "";
                Byte[] algo_base = new Byte[256];

                for (int j = 0; j < 256; j++)
                    algo_base[j] = (Byte)(Encryption_Table[i][(j + 1) % 256] - Encryption_Table[i][j]);

                int repeat = 1;
                bool repeat_found = false;
                for (int j = 1; (j < 256) && !repeat_found; j <<= 1)
                {
                    repeat_found = true;
                    for (int k = 0; (k < 256) && repeat_found; k++)
                    {
                        if (algo_base[k] != algo_base[(k + j) % 256])
                            repeat_found = false;
                    }
                    if (repeat_found)
                        repeat = j;
                }
                Temp += "            new Byte[1 + " + ((repeat<10)?" ":"") +
                    (repeat).ToString() + "] { 0x" + Encryption_Table[i][0].ToString("X2");

                for (int j = 0; j < repeat; j++)
                {
                    if (((j % 16) == 0) && (j != 0))
                        Temp += ", \n                                    " + ((repeat>=10)?" ":"") + "0x" + 
                            ((Byte)(Encryption_Table[i][(j + 1) % 256] - Encryption_Table[i][j])).ToString("X2");
                    else
                        Temp += ", 0x" + ((Byte)(Encryption_Table[i][(j + 1)%256] - Encryption_Table[i][j])).ToString("X2");
                    
                }
                ret_val += Temp + " },\n";
            }
            return ret_val + "    };";
        }


        public static Byte[] Encrypt(Byte[] bytearray, bool limit_to_alpha_numeric = false)
        {
            if (Encryption_Table[0] == null)
                InitCrypto();
            Random random = new Random();
            
            if (bytearray == null)
                return null;
            for (int i = 0; i < (bytearray.Length / 2); i++)
            {
                Byte j = (Byte)random.Next(0, 255);

                if (limit_to_alpha_numeric)
                {
                    j = (Byte)random.Next(0, alpha_numeric[Decryption_Table[bytearray[(i * 2) + 1]][bytearray[i * 2]]].Length - 1);
                    j = alpha_numeric[Decryption_Table[bytearray[(i * 2) + 1]][bytearray[i * 2]]][j];
                    bytearray[(i * 2)] = Encryption_Table[allowed_bytes[j]][Decryption_Table[bytearray[(i * 2) + 1]][bytearray[i * 2]]];
                    bytearray[(i * 2) + 1] = allowed_bytes[j];
                }
                else
                {
                    bytearray[(i * 2)] = Encryption_Table[j][Decryption_Table[bytearray[(i * 2) + 1]][bytearray[i * 2]]];
                    bytearray[(i * 2) + 1] = j;
                }
            }
            return bytearray;
        }
        public static Byte[] Decrypt(Byte[] bytearray)
        {
            if (bytearray == null)
                return null;
            if (Decryption_Table[0] == null)
                InitCrypto();
            for (int i = 0; i < (bytearray.Length / 2); i++)
            {
                bytearray[(i * 2)] = Decryption_Table[bytearray[(i * 2) + 1]][bytearray[i * 2]];
                bytearray[(i * 2) + 1] = 0;
            }
            return bytearray;
        }
    }
}
